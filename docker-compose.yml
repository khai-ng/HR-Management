version: '3.4'

services:
    mysql:
        image: mysql:8.3.0
        restart: always

    identity-api:
        image: ${DOCKER_REGISTRY-}identityapi
        build:
            context: .
            dockerfile: src/Services/Identity/Identity.API/Dockerfile
        depends_on:
            - mysql
        logging:
            driver: fluentd
            options:
                fluentd-async: "true"
                tag: logger.identity

    # employee-api:
    #     image: ${DOCKER_REGISTRY-}employeeapi
    #     build:
    #         context: .
    #         dockerfile: src/Services/EmployeeManagement/EmployeeManagement.API/Dockerfile
    #     depends_on:
    #         - mysql

    # web-apigateway:
    #     image: ${DOCKER_REGISTRY-}webapigateway
    #     build:
    #         context: .
    #         dockerfile: src/ApiGateways/Web.ApiGateway/Dockerfile
    #     depends_on:
    #         - identity-api
    #         - employee-api

    fluent-bit:
        image: fluent/fluent-bit:2.2.2
        networks:
            - local
        # depends_on:
        #     - loki

    # elasticsearch:
    #     image: docker.elastic.co/elasticsearch/elasticsearch:7.17.18
    #     restart: on-failure
    #     networks:
    #         - local
    #     depends_on:
    #         - fluent-bit
    #     logging:
    #         driver: fluentd
    #         options:
    #             fluentd-async: "true"
    #             tag: logger.es

    # kibana:
    #     image: docker.elastic.co/kibana/kibana:7.17.18
    #     restart: on-failure
    #     networks:
    #         - local
    #     depends_on:
    #         - fluent-bit
    #         - elasticsearch
    #     logging:
    #         driver: fluentd
    #         options:
    #             fluentd-async: "true"
    #             tag: logger.kibana

    loki:
        image: grafana/loki:2.9.4
        volumes:
            - ./loki:/etc/loki
        ports:
            - 3100:3100
        command: "-config.file=/etc/loki/local-config.yaml"
        networks:
            - local
        logging:
            driver: fluentd
            options:
                fluentd-async: "true"
                tag: logger.loki

    prometheus:
        image: prom/prometheus:v2.49.1
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention.time=200h'
            - '--web.enable-lifecycle'
        restart: unless-stopped
        networks:
            - local
        labels:
            org.label-schema.group: "monitoring"

    grafana:
        image: grafana/grafana:10.2.4
        networks:
            - local
        depends_on:
            - fluent-bit
            # - elasticsearch
            - loki
        logging:
            driver: fluentd
            options:
                fluentd-async: "true"
                tag: logger.grafana

    nodeexporter:
        image: prom/node-exporter:v1.7.0
        user: root
        privileged: true
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - '--path.procfs=/host/proc'
            - '--path.rootfs=/rootfs'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
        restart: unless-stopped
        expose:
            - 9100
        networks:
            - local
        labels:
            org.label-schema.group: "monitoring"

    cadvisor:
        image: gcr.io/google-containers/cadvisor:v0.36.0
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker:/var/lib/docker:ro
            #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
        restart: unless-stopped
        expose:
            - 8080
        networks:
            - local
        labels:
            org.label-schema.group: "monitoring"

    pushgateway:
        image: prom/pushgateway:v1.6.2
        container_name: pushgateway
        restart: unless-stopped
        expose:
            - 9091
        networks:
            - local
        labels:
            org.label-schema.group: "monitoring"

    # alertmanager:
    #     image: prom/alertmanager:v0.26.0
    #     volumes:
    #         - ./alertmanager:/etc/alertmanager
    #     command:
    #         - '--config.file=/etc/alertmanager/config.yml'
    #         - '--storage.path=/alertmanager'
    #     restart: unless-stopped
    #     expose:
    #         - 9093
    #     networks:
    #         - local
    #     labels:
    #         org.label-schema.group: "monitoring"

    # caddy:
    #     image: caddy:2.7.5
    #     container_name: caddy
    #     ports:
    #         - "3000:3000"
    #         - "8080:8080"
    #         - "9090:9090"
    #         - "9093:9093"
    #         - "9091:9091"
    #     volumes:
    #         - ./caddy:/etc/caddy
    #     environment:
    #         - ADMIN_USER=${ADMIN_USER:-admin}
    #         - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
    #         - ADMIN_PASSWORD_HASH=${ADMIN_PASSWORD_HASH:-$2a$14$1l.IozJx7xQRVmlkEQ32OeEEfP5mRxTpbDTCTcXRqn19gXD8YK1pO}
    #     restart: unless-stopped
    #     networks:
    #         - local
    #     labels:
    #         org.label-schema.group: "monitoring"

networks:
    local:
        driver: bridge